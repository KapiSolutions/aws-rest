#App template
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Website & Mobile starter project

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'

Parameters:
  AppId:
    Type: String


Resources:

  # This is a Lambda function config associated with the source code: get-all-items.js
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 60
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the users
        - DynamoDBCrudPolicy:
            TableName: !Ref users
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          USERS_TABLE: !Ref users
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET

  # This is a Lambda function config associated with the source code: get-by-id.js
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 60
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the users
        - DynamoDBCrudPolicy:
            TableName: !Ref users
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          USERS_TABLE: !Ref users
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{user_id}
            Method: GET

  # This is a Lambda function config associated with the source code: put-item.js
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 60
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the users
        - DynamoDBCrudPolicy:
            TableName: !Ref users
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          USERS_TABLE: !Ref users
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  # DynamoDB table to store item: {user_id: <UUID>, name: <NAME>, age: <AGE>}
  users:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: user_id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
